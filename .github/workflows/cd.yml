# .github/workflows/cd.yml
name: CD - Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [published]

env:
  IMAGE_NAME: ghcr.io/lfeng0722/name_analysis

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set tags
        id: meta
        run: |
          SHA=${GITHUB_SHA::7}
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          echo "version=${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}" >> $GITHUB_OUTPUT
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha }}
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            ${{ env.IMAGE_NAME }}:latest

  deploy_staging:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy via SSH to staging VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            export IMAGE=${{ env.IMAGE_NAME }}:latest
            cd /opt/normaliser
            docker compose pull
            docker compose up -d
            docker compose ps
            curl -fsS http://localhost:8000/openapi.json | head -c 100 >/dev/null

  deploy_production:
    needs: [build_and_push, deploy_staging]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://normaliser.example.com
    # 这里在仓库 Settings → Environments → production 里设置 Required reviewers
    steps:
      - name: Deploy via SSH to prod VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            export IMAGE=${{ env.IMAGE_NAME }}:${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
            cd /opt/normaliser
            docker compose pull
            docker compose up -d
            docker compose ps
            curl -fsS http://localhost:8000/openapi.json | head -c 100 >/dev/null
